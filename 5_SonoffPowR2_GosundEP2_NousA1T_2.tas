>D 40
; IP for external ScriptEditor
IP=192.168.178.31

; Tasmota Script für SonoffPow(R2), GosundEP2, Nous A1T Energiemess/smarte Steckdosen "Variante 2"
; Diese Variante bietet im Gegensatz zum anderen Script ein sehr hoch aufgelöstes Diagramm für die Momentanleistung der letzten Stunde (alle 5s ein Wert)
; (1) Beschreibung:
; Skript Version ganz unten
; Tasmota SML Skript mit Google Chart (Diagramme) für Sonoff Pow (R2) / Gosund EP2 Energiemess-Steckdosen
; 2 Liniendiagramme: Leistung der letzten Stunde (sehr fein aufgelöst, 5s) und Leistung der letzten 24h (grob aufgelöst)
; Das 1h Diagramm wird nicht gespeichert und ist nach jedem Neustart neu befüllt
; Tabellen mit Anzeige des Verbrauchs pro Tag und pro Monat
; Diagramme und Tabelle benötigen ca. 60s nach einem Neustart um korrekt dargestellt zu werden
; Tasmota muss mit dem Internet verbunden sein um die aktuelle Uhrzeit via NTP zu erhalten. Ansonsten muss das Skript angepasst werden.
; Dieses Skript benoetigt ein angepasstes Tasmota Image kompiliert mit USE_ENERGY_SENSOR und andere #defines. Siehe https://ottelo.jimdofree.com/stromz%C3%A4hler-auslesen-tasmota/#SkriptDownloadUser
; Optional im Skript enthalten: (Op1) Daten an www.clever-pv.com senden

; (2) Anleitung:
; http://ottelo.jimdo.de/
; (a) Script übertragen
; Ich empfehle das Script mit dem ext. Editor zu "komprimieren" (Kommentare entfernen). Script laden -> Window -> Export to documents folder. Dann einfach in Tasmota einfügen.
; ScriptEditor runterladen um dieses Skript auf den ESP zu übertragen. Der Editor entfernt alle Kommentare und leere Zeilen
; https://tasmota.github.io/docs/Scripting-Language/#optional-external-editor
; IP eures ESPs oben im Script eingeben, damit der Editor das Skript korrekt senden kann
; Hinweis Dateiformat Scriptdatei: UTF8, LF (\n) als Zeilenende (Unix EOL), damit der ext. Editor keine doppelten Leerzeichen anzeigt. Einstellbar in Notepad++ (Edit->EOL->Unix).
; (b) Initialisieren
; Wenn die Werte von der Steckdose korrekt angezeigt werden, muss das Script einmalig initialisiert werden. Folgendes in die Tasmota Console eingeben - Achtung alle Daten im Diagramm/Tabelle werden gelöscht!
; script>=#init
; (c) Um später fehlende oder falsche Werte in den Tabellen zu ändern, können folgende Befehle in der Console eingegeben werden:
;script?var       beliebige Variable auslesen z.B. script?dcon[1] (erster Tag in Monatstabelle lesen)
;script>var=1     beliebige Variable schreiben z.B. script >dcon[1]=10 (erster Tag in Monatstabelle = 10 kWh)
; (d) Um eure Diagrammdaten zu exportieren/sichern könnt ihr folgendes hintereinander eingeben. Die ausgegebenen Daten einfach markieren und in eine Textdatei kopieren:
;script?dval   script?dcon   script?mval   script?mcon   script?yval
; Zum Importieren müssen sie dann mit z.B. script>dcon={x x x x ...} eingeben werden. Am Ende speichern.


; -- ARRAYS --
; 24h power chart
M:p:sday=0 288
; Tagesverbrauch Tabelle 1-31
M:p:dcon=0 31
; Monatsverbrauch Tabelle 1-12
M:p:mcon=0 12
; 4h Chart, Neuer Wert alle 30s
M:s4h=0 721
; -- VARS --
; PermVars (max:1536bytes=384vars): Tages, Monats, Jahres Verbrauch / Einspeisung
p:mval=0
p:dval=0
p:yval=0
p:da=1
;p:vn=12000   optional um per Slider Y-Achse Werte zu begrenzen
t:t1=3
t:t2=5
t:t3=60
tmp=0
m5=0
cstr="cnt0/12"
cstr2="cnth0/720"
utm="00d 00h 00m"
avgv2=0
avgvc2=0
hr=0
save=0


; -- BOOT --
>B
=>sensor53 r
tmp=is(0 "Jan|Feb|Mär|Apr|Mai|Jun|Jul|Aug|Sep|Okt|Nov|Dez|")
;Deaktiviere MQTT beim Start, verhindert das falsche Werte gesendet werden
smlj=0


; -- SUBS --
#init
dval=enrg[10]
for tmp 1 dcon[-1] 1
	dcon[tmp]=0
	dprod[tmp]=0
next
mval=enrg[10]
for tmp 1 mcon[-1] 1
	mcon[tmp]=0
next
yval=enrg[10]
for tmp 1 sday[-1] 1
	sday[tmp]=0
next
->Backlog2 otaurl KEIN OTA UPGRADE VIA WEBSERVER!
->Backlog2 Timezone 99;TimeStd 0,0,10,1,3,60;TimeDst 0,0,3,1,2,120
svars

; Tagesverbrauch Tabelle
#daysub
if wm>0 {
wcs <div id="day" style="text-align:center;width:600px;height:400px"></div>
wcs <script language="JavaScript">function drawChart(){
wcs var cssc={'headerRow':'hRow','rowNumberCell':'hCol','tableCell':'tCell'};
wcs var data=google.visualization.arrayToDataTable([['Tag','Energie [kWh]',{role: 'style'}],
for tmp 1 dcon[-1] 1
	if (tmp==day) {
		wcs [%tmp%,%dcon[tmp]%,'red'],
	}
	if (tmp<day) {
		wcs [%tmp%,%dcon[tmp]%,'green'],
	}
	if (tmp>day) {
		wcs [%tmp%,%dcon[tmp]%,''],
	}
next
wcs ]);
wcs var options={chartArea:{left:40,right:30,height:'75%%'},legend:'none',title:'Tagesverbräuche (Monat %is[month]%)',vAxis:{format:'# kWh'},hAxis:{title:'Tag',ticks:[1,5,10,15,20,25,30]}};
wcs var chart=new google.visualization.ColumnChart(document.getElementById('day'));
wcs chart.draw(data,options);}google.charts.setOnLoadCallback(drawChart);</script>
}

; Netzverbrauch Monat Tabelle
#monthsub
if wm>0 {
wcs <div id="month" style="text-align:center;width:600px;height:400px"></div>
wcs <script language="JavaScript">function drawChart(){
wcs var cssc={'headerRow':'hRow','rowNumberCell':'hCol','tableCell':'tCell'};
wcs var data=google.visualization.arrayToDataTable([['Monat','Energie [kWh]',{role: 'style'}],
for tmp 1 12 1
	if (tmp<month) {
		wcs ['%is[tmp]%',%mcon[tmp]%,'green'],
	}
	if (tmp==month) {
		wcs ['%is[tmp]%',%mcon[tmp]%,'red'],
	}
	if (tmp>month) {
		wcs ['%is[tmp]%',%mcon[tmp]%,''],
	}
next
wcs ]);
wcs var options={chartArea:{left:40,right:40,height:'75%%'},legend:'none',title:'Verbräuche (Jahr %0(year-1)%/%0year%)',vAxis:{format:'# kWh'}};
wcs var chart=new google.visualization.ColumnChart(document.getElementById('month'));
wcs chart.draw(data,options);}google.charts.setOnLoadCallback(drawChart);</script>
}


; -- JEDE SEKUNDE --
>S
; Daten sofort speichern Button
if (save==1) {
	save=0
	svars
}
; Warte auf NTP und Zähler
if ((year<2020) or (enrg[1]==0)) {
	print auf NTP/Zähler warten
	break
}
; Starte MQTT erst wenn Daten vom Stromzähler kommen
smlj=1

; alle 3s
if (t1==0) {
	t1=3
	; enrg[n] = hole Wert vom energy register n 0=Gesamtverbrauch, 1..3 Spannung von Phase 1..3, 4..6 aktuell von Phase 1..3, 7..9 Leistung von Phase 1..3, 10=Verbrauch ab Start, 11=Tagesverbrauch, 12=Verbrauch Gestern (USE_ENERGY_SENSOR)
	; Leistung aufsummieren 4h/24h Diagramm
	avgv2+=enrg[7]
	avgvc2+=1
	; (Op1) Siehe https://ottelo.jimdofree.com/stromz%C3%A4hler-auslesen-tasmota/#8
	;->WebQuery EURE-PUSH-API-URL POST [Content-Type:application/json] {"watt": %0enrg[7]%}
}

; alle 5s
if (t2==0) {
	t2=5
	; 1h chart. idx wird automatisch gesetzt
	s4h=enrg[7]

	; Setze 1h Chart X-Achse alle 5s => /720 Werte pro Stunde. Arraygrösse = 720
	; 2880: 720 Werte pro Stunde * 24h => modulo
	; (hours+23)*720: hours=0-23 * 720, da pro Stunde 720 Werte
	;                 +23 = Offset, da das Diagramm 24-1h in die Vergangenheit reichen soll
	; mins*2: (mins=0-59), *12 da pro Minute 12 Werte
	; secs/5: (secs=0-59), /5 da pro 5s ein Wert
	cstr2="cnth"+s(1.0((((hours+23)*720)+(mins*12)+(int(secs/5)))%17280+1))+"/720"
}

; alle 60s
if (t3==0) {
	t3=60
	hr=hours
	;Zeit seit letztem Boot
	utm=s(2.0(int(uptime/1440)))+"d "+s(2.0(int(uptime/60)%24))+"h "+s(2.0(uptime%60))+"m"

	; Tagesverbrauch [kWh]
	dcon[day]=enrg[10]-dval
	; Monatsverbrauch [kWh]
	mcon[month]=enrg[10]-mval
	
	;=>publish stat/%topic%/script/consday %2(dcon[day])%
	;=>publish stat/%topic%/script/consmonth %2(mcon[month])%
	;=>publish stat/%topic%/script/consyear %2(enrg[10]-yval)%

	; 24h Chart. Berechne Durschnittsleistung [W] der letzten 5min => ins Array[1-288]
	m5=int((((hours*60)+mins)/5)+1)
	; set idx (pointer starts from 0)
	sday[0]=m5
	if (chg[m5]>0) {
		sday[m5]=int(avgv2/avgvc2)
		avgv2=0
		avgvc2=0
	}

	; Aktualisiere 24h Chart alle 5Min => Arraygröße 288
	; tasmota calc [hh:mm] via cnthX/Y. mm = X%Y * 60/Y. hh = X/Y
	cstr="cnth"+s(1.0(((hours)*12)+int(mins/5))+1)+"/12"

	; Tagesverbrauch Berechnung um Mitternacht
	if ((chg[hr]>0) and (hr==0)) {
		if (day>1) {
			da=day
		} else {
		    ; Monatswechsel
			for tmp (da+1) 31 1
				dcon[tmp]=0
			next
			; monthly values
			mval=enrg[10]
		}
		if (day*month==1) {
			; Jahreswechsel
			yval=enrg[10]
		}
		; daily values
		dval=enrg[10]
		; nur 1x um Mitternacht speichern
		svars
	}
}


; WEB INTERFACE
>W
; Auto reload
;$<script> setTimeout("location.reload(true);",5000); </script>

;Tasmota Buttons ausblenden. Um an die Menüs zu kommen z.B. http://tasmota-ip/mn? eingeben
;<style>form button{display:none}</style>

; web button
bu(save "gespeichert!" "Daten sofort speichern")
; optional um per Slider Y-Achse Werte zu begrenzen, suche im Skript nach vn
;sl(4000 20000 vn "4 kW" "12 kW" "20 kW")

; Verbrauch
Tagesverbrauch{m}%2(enrg[10]-dval)% kWh
Monatsverbrauch{m}%2(enrg[10]-mval)% kWh
Jahresverbrauch{m}%2(enrg[10]-yval)% kWh

; Zeit
Datum{m}%s(2.0day)%.%s(2.0month)%.%s(2.0year)% - %s(2.0hours)%:%s(2.0mins)%:%s(2.0secs)%
Uptime{m}%utm%
$<div style="margin-left:-30px">

; 1h hochaufgelöstes Leistung Diagramm (5s Raster)
$<div id="chart1" style="text-align:center;width:600px;height:400px"></div>
$gc(lt s4h "wr" "Leistung [W]" cstr2)
$var options = {
$chartArea:{left:60,right:20,height:'75%%'},
$legend:'none',
;$vAxis:{format:'# W',viewWindow:{max:%vn%}},   optional um per Slider Y-Achse Werte zu begrenzen, suche im Skript nach vn
;$vAxis:{format:'# W',viewWindow:{max:5000}},   optional um Y-Achse Werte auf 5kW zu begrenzen
$vAxis:{format:'# W'},
$hAxis:{slantedTextAngle:45},
$explorer:{actions:['dragToZoom','rightClickToReset']},
$series: {0: {type: 'area'}},
$title:'Leistung 1 Stunde [Watt]'
$};
$gc(e)

; 24h Leistung Diagramm
$<div id="chart2" style="text-align:center;width:600px;height:400px"></div>
$gc(lt sday "wr" "Leistung [W]" cstr)
$var options = {
$chartArea:{left:60,right:20,height:'75%%'},
$legend:'none',
;$vAxis:{format:'# W',viewWindow:{max:%vn%}},   optional um per Slider Y-Achse Werte zu begrenzen, suche im Skript nach vn
;$vAxis:{format:'# W',viewWindow:{max:5000}},   optional um Y-Achse Werte auf 5kW zu begrenzen
$vAxis:{format:'# W'},
$hAxis:{slantedTextAngle:45},
$explorer:{actions:['dragToZoom', 'rightClickToReset']},
$series: {0: {type: 'area'}},
$title:'Leistung 24 Stunden [Watt]'
$};
$gc(e)

; Einfacher Säulenchart mit 2 Reihen
;$<div id="chart3" style="text-align:center;width:600px;height:400px"></div>
;$gc(c dprod "wr" "kWh" "cnt1" "Tägliche Einspeisung")

; Tagesverbrauch Tabelle
%=#daysub

; Netzverbrauch Monat Tabelle
%=#monthsub

$<center><span style="font-size:10px;">
$Tasmota Script fuer Sonoff Pow (R2) / Gosund EP2 Steckdosen mit Energiemessung
$Version 29.09.2025 by ottelo.jimdo.de<br>
$Credits to gemu2015 (Tasmota Script Dev)<br>
$Hinweis: Die Daten (ohne 4h Chart) werden um Mitternacht gespeichert!<br>
$Der Restart Button speichert ebenfalls die Daten.<br>
$</span></center></div>